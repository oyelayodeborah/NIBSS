@model MyNIBSS.ViewModels.ChangeUserPasswordViewModels

@{
    ViewBag.Title = "Change Your Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.id)
    @ViewBag.Message

<div class="form-horizontal col-md-6">
    <span id="error" class="text-red"></span>
    @if (ViewBag.Invalid != null)
    {
        <div class="alert alert-error">
            <p>@ViewBag.Invalid <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

        </div>
    }
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.current_password)
        @Html.PasswordFor(m => m.current_password, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.current_password, "", new { @class = "text-danger" })
        <span id="current_passworderror" class="text-red"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.new_password)
        @Html.PasswordFor(m => m.new_password, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.new_password, "", new { @class = "text-danger" })
        <span id="new_passworderror" class="text-red"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.confirm_password)
        @Html.PasswordFor(m => m.confirm_password, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.confirm_password, "", new { @class = "text-danger" })
        <span id="confirm_passworderror" class="text-red"></span>
    </div>

    <input type="hidden" name="session" value="@Session["id"]" />
</div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="SUBMIT" class="btn btn-default" />
        </div>
    </div>
}
@section ViewSpecificJavascript
    {
    <script>
        $(document).ready(function () {
            setTimeout(function () {
                $(".alert").fadeOut(100, null);
            },
                3000);
            //$("input[type = 'submit']").attr("disabled", true);
            $('#current_password').keyup(function () {
                value = $(this).val();
                if (value.length < 9 || value.length > 30) {
                    $("#current_passworderror").html("Invalid Current Password");
                } else {
                    $("#current_passworderror").html("");

                }
            })
            $('#new_password').keyup(function () {
                value = $(this).val();
                if (value.length < 9 || value.length > 30) {
                    $("#new_passworderror").html("New password can only be between 9 or 30 characters");
                } else {
                    $("#new_passworderror").html("");

                }
            })


            $("form").submit(function (e) {

                var current_password = $('#current_password').val();
                var new_password = $('#new_password').val();
                var confirm_password = $('#confirm_password').val();
                if (current_password == "" || new_password == "" || confirm_password == "") {
                    e.preventDefault();
                    $("#error").html("Kindly fill all the fields below");
                }
                else {
                    if (new_password == confirm_password) {
                        $("#error").html("");
                    }
                    else {
                        e.preventDefault();
                        $("#error").html("Re-enter your Confirm Password");
                    }


                }


            })
        })
    </script>
}
